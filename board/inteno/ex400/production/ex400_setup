# This file is downloaded and then executed on u-boot on ex400 board
# first set env variables. varables starting with _ is temparary and
# needs to be unset before saveenv is run at the end or else they will
# end up stored.
#
# this file can not be larger than 20k or it will overwrite u-boot code.

# the following lines should be generated by a cgi script
setenv board_id EX400R0
setenv serial_number EX40024H14201300
setenv ethaddr 00:AA:BB:CC:AA:12
setenv num_mac_addr 6
setenv i_antenna 0
setenv auth_key KC84Y7QAG2J8V68D
setenv des_key H7FWGUX7HH4OD0CV
setenv wpa_key 6D807EBA1E8C46
setenv psn 70W4BI00001

# The firmware to use in production
setenv _firmware EX400-WU8U_XAVI4.0.1D-9c3fca7-161222_1120.y2

# should already be set but for clarity set it again
setenv root_vol rootfs_0

# try to download the new release file first
# the shell is limited/hard to use. this loops until the command succede
echo will download script from [wget -t 5 http://192.168.1.2/${_firmware}]

setenv _loop 1
while test ${_loop} = 1
do
	if wget -t 5 http://192.168.1.2/${_firmware}
	then
		setenv _loop 0
	else
		echo "failed to download firmware. Retrying"
	fi
done
setenv _loop 

# now burn data to flash.
if y2image burn ${root_vol}
then
	echo "ubifsmount ubi0:${root_vol}"
	if ubifsmount ubi0:${root_vol}
	then
		echo "yes now load uboot to dram"	
		if ubifsload ${loadaddr} /boot/uboot.img
		then
			echo "uboot loaded to dram. Now burn it to flash"
			nand erase.part uboot
			nand write ${loadaddr} uboot $filesize
		else

			echo "failed to load uboot from firware"
			exit 1
		fi
	else
		echo "could not mount firmware"
		exit 1
	fi
else
	echo "no y2 image found"
	exit 1
fi

# set new bootcmd
setenv bootcmd 'rescue;run boot_ubi'

# cleanup env before save
setenv _firmware

saveenv

#restart
reset
